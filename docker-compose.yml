version: '3.8'

services:
  db:
    image: postgres:13-alpine
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - 5433:5432
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_DB=sample
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d sample"]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 80s

  db_test:
    image: postgres:13-alpine
    volumes:
      - postgres-data-test:/var/lib/postgresql/data
    ports:
      - 5434:5432
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_DB=sample_test
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d sample_test"]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 80s

  web:
    build: .
    command: sh -c 'alembic upgrade head && uvicorn app.main:app --reload --workers 1 --host 0.0.0.0 --port 8000'
    volumes:
      - .:/app
    ports:
      - 8001:8000
    env_file:
      - ./.env
    environment:
      - DB_ASYNC_CONNECTION_STR=${DB_ASYNC_CONNECTION_STR}
    depends_on:
      db:
        condition: service_healthy

  test:
    build: .
    volumes:
      - .:/app
    ports:
    - 8002:8000
    stdin_open: true
    env_file:
      - ./.env
    environment:
      - DB_ASYNC_TEST_CONNECTION_STR=${DB_ASYNC_TEST_CONNECTION_STR}
    depends_on:
      db_test:
        condition: service_healthy

volumes:
  postgres-data:
  postgres-data-test:
